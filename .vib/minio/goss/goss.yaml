http:
  http://localhost:{{ .Vars.containerPorts.console }}:
    status: 200
command:
  {{- $auth := printf "'%s' '%s'" .Vars.auth.rootUser .Vars.auth.rootPassword }}
  {{- $minio_cfg_name := printf "minio%s" (randAlpha 5) }}
  {{- $minio_bucket := printf "bucket%s" (randAlpha 5 | toLower) }}
  {{- $minio_endpoint := printf "http://minio:%d" .Vars.service.ports.api }}
  mc-make-bucket:
    exec: mc config host add {{ $minio_cfg_name }} {{ $minio_endpoint }} {{ $auth }} && mc mb {{ $minio_cfg_name }}/{{ $minio_bucket }} && mc ls {{ $minio_cfg_name }}
    exit-status: 0
    stdout:
      - "{{ $minio_bucket }}/"
  mc-list-buckets:
    exec: mc admin info local
    exit-status: 0
    stdout:
      - /Network.*OK/
      - /Drives.*OK/
  check-user-info:
    exec: id
    exit-status: 0
    stdout:
    - uid={{ .Vars.containerSecurityContext.runAsUser }}
    - /groups=.*{{ .Vars.podSecurityContext.fsGroup }}/

file:
  {{ .Vars.persistence.mountPath }}:
    filetype: directory
    exists: true
    mode: "2775"
    owner: root
  /var/run/secrets/kubernetes.io/serviceaccount:
    exists: {{ .Vars.serviceAccount.automountServiceAccountToken }}
    filetype: directory
    mode: "3777"
